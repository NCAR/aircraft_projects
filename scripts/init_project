#!/bin/csh

if ($#argv != 2) then

  echo "This script is intended to create an initial project directory and copy"
  echo "files for processing."
  echo "Scripts will most likely need tweaking to get exact results, but"
  echo "this provides a useful first pass."
  echo
  echo "Usage:"
  echo "init_project ProjectName {Platform}"
  echo
  echo "The optional Platform argument puts the script into non-interactive"
  echo "mode" 
  echo 
  echo -n "Proceed (y/N) ? "
  set proceed = $<
  
  if ($proceed != "y") then
    exit(1)
  endif

  if ($#argv == 0) then
    echo "Usage:\n init_project ProjectName {Platform}\n"
    exit(0)
  endif

  # check for non-existance of /opt/nidas/share/xml/nidas.xsd
  if (! -f /opt/nidas/share/xml/nidas.xsd) then
    echo
    echo
    echo "File /opt/nidas/share/xml/nidas.xsd not found."
    echo "Run this script on a system with nidas installed or copy it to"
    echo "   ProjectName/Platform/nidas/nidas.xsd manually before pushing."
    echo
    echo -n "Proceed (y/N) ? "
    set proceed = $<
  endif 

  if ($proceed != "y") then
    exit(1)
  endif

  echo "\nChoose platform:"
  echo "  1. NCAR C130"
  echo "  2. NCAR GV"
  echo "  3. Lab system"
  echo -n "Enter (1-3) ? "
  set platform = $<

  switch ($platform)
    case [1]:
      set platform = 'C130_N130AR'
      breaksw
    case [2]:
      set platform = 'GV_N677F'
      breaksw
    case [3]:
      set platform = 'Lab_N600'
      breaksw
    default:
      echo "Invalid choice."
      exit(0)
  endsw
else
  set platform=$argv[2]
endif

set proj=$argv[1]

cd $PROJ_DIR

if (-d $PROJ_DIR/$proj/$platform) then
  echo -n "\nDirectory $PROJ_DIR/$proj/$platform already exists, erase and start over (y/N)? "
  set proceed = $<
  if ($proceed != "y") then
    exit(1)
  endif
  /bin/rm -vrf $PROJ_DIR/$proj/$platform
endif


echo "\nCreating directories."
/bin/mkdir -vp $PROJ_DIR/$proj/$platform
/bin/chmod -vR g+s $PROJ_DIR/$proj

if ($status != 0) then
  echo "mkdir $PROJ_DIR/$proj/$platform failed, exiting."
  exit(0)
endif

/bin/mkdir -vp -m g+s $PROJ_DIR/$proj/$platform/nidas
/bin/mkdir -vp -m g+s $PROJ_DIR/$proj/$platform/Production
/bin/mkdir -vp -m g+s $PROJ_DIR/$proj/$platform/Production/archive
/bin/mkdir -vp -m g+s $PROJ_DIR/$proj/$platform/scripts

/bin/mkdir -vp -m g+s $RAW_DATA_DIR/$proj/
/bin/mkdir -vp -m g+s $DATA_DIR/$proj

echo "\nCopying files."
echo $proj > $proj/$platform/ProjectName

/bin/cp -v /opt/nidas/share/xml/nidas.xsd $proj/$platform/nidas
/bin/cp -v Configuration/Categories $proj/$platform
#/bin/cp -v Configuration/Despike $proj/$platform
/bin/cp -v Configuration/PMSspecs $proj/$platform
/bin/cp -v Configuration/StandardNames $proj/$platform
/bin/cp -v Configuration/VarDB $proj/$platform
/bin/cp -v Configuration/ascii_parms $proj/$platform
/bin/cp -v Configuration/groundvars $proj/$platform
/bin/cp -v Configuration/landmarks $proj/$platform

/bin/cp -v Configuration/$platform/* $proj/$platform
# Move the nidas bits down
/bin/mv -v $proj/$platform/default.xml $proj/$platform/nidas
/bin/mv -v $proj/$platform/sensor_catalog.xml $proj/$platform/nidas
# We don't need this file - or grab it manually in the case you need it
/bin/rm $proj/$platform/gust.xml

echo ProjNum=$proj > $proj/$platform/Production/Flight_All
/bin/cat $proj/$platform/Flight_All >> $proj/$platform/Production/Flight_All
/bin/rm $proj/$platform/Flight_All

/bin/cp -v Configuration/FlightGroups $proj/$platform/Production
/bin/cp -v Configuration/archive/archAC.sh $proj/$platform/Production/archive
/bin/cp -v Configuration/scripts/fieldProc_setup.py $proj/$platform/scripts
/bin/cp -v scripts/camera/createMovies.sh $proj/$platform/scripts
/bin/cp -v scripts/camera/filterImages.sh $proj/$platform/scripts
/bin/cp -v scripts/camera/movieParamFile $proj/$platform
/bin/cp -v scripts/camera/flightTrackAnim.py $proj/$platform/scripts

echo "\nSetting group write permissions."
/bin/chmod -vR g+w,o-w $PROJ_DIR/$proj $RAW_DATA_DIR/$proj $DATA_DIR/$proj
/bin/chgrp -vR proj $PROJ_DIR/$proj $RAW_DATA_DIR/$proj $DATA_DIR/$proj

set split = ($platform:as/_/ /)
sed -i "s/$split[1] Project/$proj/" $proj/$platform/nidas/default.xml

# I don't want vardb.xml committed at this time.  Breaks clean status. cjw 7/20
#echo "\nGive us a legitimate vardb.xml and xsd ."
#cd $proj/$platform
#/opt/local/bin/vdb2xml VarDB

echo "\nMake sure this gets added to github (git add $PROJ_DIR/$proj; git commit; git push)."

