#!/bin/csh

echo "This script is intended to create final processing scripts and nimbus setup"
echo "files for batch processing.  Current incarnation does research and ferry"
echo "flights.  Scripts will most likely need tweaking to get exact results, but"
echo "this provides a useful first pass."
echo
echo "Make sure all the ads files you want are downloaded, and unwanted ads files have"
echo "been removed (e.g. superfluous ground ads files).  Also make sure extract2d has"
echo "been run and the all the desired 2d files are in place.  Be sure to merge 2d"
echo "files if multiple files exist for one flight."
echo
echo "Usage:"
echo "cd SOCRATES/GV_N677F/Production"
echo "init_processing SOCRATES"
echo
echo "Edit run_proc2d to add/remove 2d processing lines."
echo
echo -n "Proceed (y/N) ? "
set proceed = $<

if ($proceed != "y") then
  exit(1)
endif

if ($#argv == 0) then
  echo "Usage:\n init_processing proj_name\n"

  echo 'Prerequisites: ads files have been copied into RAW_DATA_DIR/proj_name and extract2d has been run (i.e. all .2d files exist in $RAW_DATA_DIR/$proj/PMS2D/)'
  exit
endif

set proj=$argv[1]
set dat=${DATA_DIR}/${proj}


# ---------------------------------------------------------
# set_env script
#
cat > set_env << EOFSE
#!/bin/bash

PROJ=$proj

AIRCRAFT=\$(n_hdr_util \${RAW_DATA_DIR}/\${PROJ}/*.ads | grep 'system name:' | awk '{print \$3}')

if [ \`whoami\` == nimbus ]; then
  DAT=/scr/raf/local_productiondata/
else
  DAT=\${DATA_DIR}/\${PROJ}
fi
EOFSE


# ---------------------------------------------------------
# run_all script
#
cat > run_all << "EOFRA"
#!/bin/bash

/usr/bin/Xvfb -screen 1 1280x1024x16 -pn -ac -nolisten tcp :9 &
xvpid=$!
trap "kill $xvpid; exit 1" SIGINT SIGTERM
sleep 2

DISPLAY=:9.1

source ./set_env
source ${PROJ_DIR}/scripts/production_fns.sh
initialize_processing

./run_nimbus
reorder_all
./run_proc2d

#./AddHtTerrain  # Set lat/lon box in AddHtTerrain, then uncomment here

if [ `whoami` == nimbus ]; then
#  run_kalmanFilter
  true
fi

cleanup_processing

kill $xvpid
exit 0
"EOFRA"


# ---------------------------------------------------------
# run_nimbus script.
#
cat > run_nimbus << "EOFRN"
#!/bin/bash

source ./set_env

# Remove existing files.  Helps to avoid residual data if nimbus fails.
/bin/rm ${DAT}/${PROJ}?f??.nc

for setup_file in setup_?f??
do
  nimbus -b $setup_file
done
"EOFRN"


# ---------------------------------------------------------
# nimbus setup_* files.
#
foreach file (${RAW_DATA_DIR}/$proj/*[rft]f*.ads)
  set bfname=`basename $file`
  set flight=`echo $bfname | cut -b 17-20`
  echo 'if=${RAW_DATA_DIR}/'$proj'/'$bfname > setup_$flight
  echo 'of=${DATA_DIR}/'${proj}'/'${proj}${flight}.nc >> setup_$flight
end


# ---------------------------------------------------------
# Fast 2D processing script.
#
cat > run_proc2d << "EOF2D"
#!/bin/bash

source ./set_env

if [ -d ${RAW_DATA_DIR}/${PROJ}/PMS2D ]; then

  for file in ${RAW_DATA_DIR}/${PROJ}/PMS2D/*2d
  do
    bfname=`basename $file`
    flight=`echo $bfname | cut -b 17-20`
    process2d ${RAW_DATA_DIR}/${PROJ}/PMS2D/${bfname} -o ${DAT}/${PROJ}${flight}.nc
  done
fi

if [ -d ${RAW_DATA_DIR}/${PROJ}/F2DS/oap ]; then

  for file in ${RAW_DATA_DIR}/${PROJ}/F2DS/oap/*2d
  do
    bfname=`basename $file`
    flight=`echo $bfname | cut -b 17-20`
    process2d ${RAW_DATA_DIR}/${PROJ}/F2DS/oap/${bfname} -o ${DAT}/${PROJ}${flight}.nc
  done
fi

if [ -d ${RAW_DATA_DIR}/${PROJ}/HVPS/oap ]; then

  for file in ${RAW_DATA_DIR}/${PROJ}/HVPS/oap/*2d
  do
    bfname=`basename $file`
    flight=`echo $bfname | cut -b 17-20`
    process2d ${RAW_DATA_DIR}/${PROJ}/HVPS/oap/${bfname} -o ${DAT}/${PROJ}${flight}.nc
  done
fi

"EOF2D"

# ---------------------------------------------------------
# Terrain Height variable creation script.
#
cat > AddHtTerrain << "EOFZ"
#!/bin/csh
"EOFZ"

echo 'set project='${proj} >> AddHtTerrain

cat >> AddHtTerrain << "EOFZ2"
set Directory=${DAT}
# Use flt_area in aircraft_nc_utils to find minimum area for which the Terrain
# database will be downloaded. Setting to minimum area speeds up processing and
# saves disk space. The final thing printed by flt_area is:
# Maximum Latitude: 44.298283
# Minimum Latitude: -32767.0
# Minimum Longitude: -32767.0
# Maximum Longitude: 179.99911
# Save these last 4 lines to area and then extract the numbers
set area=`flt_area ${DAT}/${project}rf01.nc | tail -4`
set lt_s=(`printf '%f.0' $area[6]`)
set lt_n=(`printf '%f.0' $area[3]`)
set lg_w=(`printf '%f.0' $area[9]`)
set lg_e=(`printf '%f.0' $area[12]`)
# Set Tdb to yes the first time this is run to download the Terrain database.
# Set to no after first run to save time.
set Tdb="yes"

# Expand everything out a degree to ensure we don't loose any edge data.
set lt_s = (`expr $lt_s - 1`)
set lt_n = (`expr $lt_n + 1`)
set lg_w = (`expr $lg_w - 1`)
set lg_e = (`expr $lg_e + 1`)

echo 'Adding Terrain Ht vars to netCDF files in '${DAT}' for project '$project
echo 'Using lat/long range '${lt_s}' - '${lt_n}', '${lg_w}' - '${lg_e}

foreach file ( ${DAT}/${project}[rtf]f??.nc )
  set flight=`echo $file | awk '{print substr($0,length($0)-6,4)}'`
  Rscript ~nimbus/RStudio/HeightOfTerrain/HeightOfTerrain.R $project $flight $Directory $lt_s $lt_n $lg_w $lg_e $Tdb
end
"EOFZ2"


chmod +x set_env run_all run_nimbus run_proc2d
chmod g+w set_env run_all run_nimbus run_proc2d setup_*
