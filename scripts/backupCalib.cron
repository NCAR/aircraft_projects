#!/bin/tcsh -x
#
# A script to backup the master calibrations postgres database to a file
# that is committed to github.  This facilitates understanding how the
# database has changed since the last backup.
#
# Script provides notifications via e-mail when the database has changed.
# 
# Assumptions:   user has a .pgpass file in their home direcotry that contains 
#                password information for the ads user on the calibrations database
#
# 0 5 * * mon /home/local/RAF/projects/scripts/backupCalib.cron
#
# Logs are written to a logfile defined below.

echo "starting backup of calib db"

# Set up variables to be used in script
set logfile = /tmp/backupCalib.cron.log
set diffile = /tmp/backupCalib.diff.txt
set dbserver = eol-rosetta.eol.ucar.edu


## Temporary Hack to deal with svn version issues on shared filesystem
set PROJ_DIR = /net/jlocal/projects
set sqlfile = $PROJ_DIR/Configuration/cal_files/master-calibrations.sql
set tmpsqlfile = $PROJ_DIR/Configuration/cal_files/master-calibrations.sql.tmp
set insfile = $PROJ_DIR/Configuration/cal_files/master-cal.INSERTS.sql
set tmpinsfile = $PROJ_DIR/Configuration/cal_files/master-cal.INSERTS.sql.tmp
set noninsfile = $PROJ_DIR/Configuration/cal_files/master-cal.nonINSERTS.sql
set tmpnoninsfile = $PROJ_DIR/Configuration/cal_files/master-cal.nonINSERTS.sql.tmp
set emailaddr = "ads@eol.ucar.edu"
set subject = "Master Calibrations Database Backup Notice"

# Set up log file. Logfile is deleted between each run.
rm -f $logfile
echo Logfile: $logfile
touch $logfile

# Check for previous backup which have not yet been addressed
# if we find this is the case, back up curent database, make notice and bail
echo "checking for previous backup" >> $logfile
cd $PROJ_DIR

set echo

#  Check for existence of sql file before performing diff.
if (-e $sqlfile) then
  set res = `git diff $sqlfile | wc -l`
else
  # If sqlfile doesn't exist, then there is no difference to be had.
  set res = 0
endif

if ($res != 0) then
  echo "We're in the diff clause!" >> $logfile
  rm -f $diffile
  # Address the existing sql file. Notify about changes.
  echo "** Previous differences in backup of the Master Calibrations Database have not been addressed **" > $diffile
  echo "" >> $diffile
  echo "Previous changes to the Master Calibrations Database" >> $diffile
  echo " found on the postgres server on: $dbserver" >> $diffile
  echo "The changes have been backed up in the file:" >> $diffile
  echo " $sqlfile" >> $diffile
  echo " Which should now be committed to github." >> $diffile
  echo "" >> $diffile

  # Perform an additional backup to catch any additional changes.
  echo "Performing a new backup to the standard backup file to catch any additional changes..." >> $diffile
  echo "" >> $diffile
  if (-e $tmpsqlfile) then
      echo " ** This backup will overwrite existing file $tmpsqlfile **" >> $diffile
      echo "" >> $diffile
  endif
  pg_dump --insert --clean --create -h eol-rosetta.eol.ucar.edu -U ads calibrations -f $tmpsqlfile >> $logfile
  echo "Additional changes have been backed up in the file: " >> $diffile
  echo " $tmpsqlfile" >> $diffile
  echo " which should be copied to $sqlfile and committed to github." >> $diffile
  echo "" >> $diffile
  # Add a diff of the previous file here...
  echo " Additional changes (in SQL code) follow:" >> $diffile
  echo "" >> $diffile
  diff $sqlfile $tmpsqlfile >> $diffile
  cat $diffile | mailx -s "$subject" $emailaddr
  rm -f $diffile
  # bail
  echo "Email sent. Exiting." >> $logfile
  exit
endif

echo "All changes to sql file have been committed. Perform backup." >> $logfile
# Perform and log the backup
echo -n "START " >> $logfile
date             >> $logfile
echo "Backup of eol-rosetta's calibrations database to a directory that is regularly backed up by CIT." >> $logfile
pg_dump --insert --clean --create -h eol-rosetta.eol.ucar.edu -U ads calibrations -f $tmpsqlfile >> $logfile
echo -n "END   " >> $logfile
date             >> $logfile

echo "Gather inserts" >> $logfile
# Gather the INSERT portion of the original and new files and sort them so 
# that the variation of the pg_dump sequencing does not affect comparison
grep INSERT $tmpsqlfile | sort > $tmpinsfile
grep INSERT $sqlfile | sort > $insfile

# Check for INSERT differences 
set res = `diff $tmpinsfile $insfile | wc -l`
if ($res == 0) then
  set insdiff = 0
  echo "no diff INS file" >> $logfile
else
  set insdiff = 1
  echo "INS file difference" >> $logfile
endif

echo "Gather non-inserts" >> $logfile
# Gather the non-INSERT portion of the original and new files and sort them
# so that variation of the pg_dump sequencing does not affect comparison
rm -f $tmpnoninsfile
rm -f $noninsfile
grep -v INSERT $tmpsqlfile | sort > $tmpnoninsfile
grep -v INSERT $sqlfile | sort > $noninsfile

# Check for non-INSERT differences
set res = `diff $tmpnoninsfile $noninsfile | wc -l`
if ($res == 0) then
  set noninsdiff = 0
  echo "no diff non-INS file" >> $logfile
else
  set noninsdiff = 1
  echo "non-INS file diff" >> $logfile
endif

# Notify of status
if ($insdiff == 0 && $noninsdiff == 0) then
  echo "No changes to Calibration DB on $dbserver" | mailx -s "$subject" $emailaddr
else
  rm -f $diffile
  echo "There have been changes to the Master Calibrations Database found on the postgres server on: $dbserver" > $diffile
  echo "\nThe changes have been backed up in the file:" >> $diffile
  echo " $sqlfile" >> $diffile
  echo "\nWhich should now be committed to github." >> $diffile
  echo "" >> $diffile
  echo " The changes (in SQL code) follow in two parts -" >> $diffile
  echo " INSERT differences and then non-INSERT differences:" >> $diffile
  echo "" >> $diffile
  echo "**************  INSERT Diffs ************************" >> $diffile
  diff $insfile $tmpinsfile >> $diffile
  echo "" >> $diffile
  echo "*************** non-INSERT Diffs *********************" >> $diffile
  diff $noninsfile $tmpnoninsfile >> $diffile
  echo ""
  echo "Putting new sql file into place - please commit to github" >> $diffile
  
  cat $diffile | mailx -s "$subject" $emailaddr
  mv -f $tmpsqlfile $sqlfile
  rm -f $diffile
endif

rm -f $tmpsqlfile
rm -f $insfile
rm -f $tmpinsfile
rm -f $noninsfile
rm -f $tmpnoninsfile

