#!/bin/sh

######################################################################
# As of version 2.4.4, pppd execs this ip-pre-up script with the
# following arguments:
#   ifname devname speed local remote ipparam
#
# To test this script, uncomment "set -x" and run it by hand like so:
# ./ip-pre-up ppp0 /dev/ttyS0 38400 12.42.105.41 12.42.104.9 iridium
#
######################################################################

# set -x

# PATH=/usr/sbin:/sbin:$PATH

[ $# -lt 6 ] && exit 1
ipparam=$6
dev=$1

# Workaround for some bugs in redhat networking.

# Perhaps the DEVICE has changed from what is in the config file,
# say from ppp1 to ppp0. If so, then 
# 1. update the DEVICE value in the config file
# 2. rename the /var/run/pppwatch-${DEVICE}.pid file,
#    because ifdown reads the new config file and will not
#    find the pppwatch pid file.
# 3. restart any system-control-network processes so the user sees
#     the active device.
cfg=/etc/sysconfig/network-scripts/ifcfg-${ipparam}
if [ -f $cfg ]; then
    . $cfg
    if [ $DEVICE != $dev ]; then

        # must use the --copy because this file is hard-linked
        sed -ri --copy "s/^DEVICE=.+\$/DEVICE=${dev}/" $cfg

        [ -f /var/run/pppwatch-${DEVICE}.pid ] && \
            mv /var/run/pppwatch-${DEVICE}.pid /var/run/pppwatch-${dev}.pid

        pid=`pgrep -f "python /usr/bin/system-control-network"`
        if [ -n $pid ]; then
            user=`ps -o user $pid | sed 1d`
            pkill -HUP -f "python /usr/bin/system-control-network"
            su -c "DISPLAY=:0 system-control-network" $user &
        fi
    fi
fi

exit 0

