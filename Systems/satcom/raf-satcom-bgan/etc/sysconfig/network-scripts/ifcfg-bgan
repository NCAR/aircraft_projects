#***********************************************************************
#
# pppoe.conf
#
# Configuration file for rp-pppoe.  Edit as appropriate and install in
# /etc/ppp/pppoe.conf
#
# NOTE: This file is used by the pppoe-start, pppoe-stop, pppoe-connect and
#       pppoe-status shell scripts.  It is *not* used in any way by the
#       "pppoe" executable.
#
# Copyright (C) 2000 Roaring Penguin Software Inc.
#
# This file may be distributed under the terms of the GNU General
# Public License.
#
# LIC: GPL
# $Id: pppoe.conf,v 1.11 2005/08/09 02:49:12 dfs Exp $
#***********************************************************************

# When you configure a variable, DO NOT leave spaces around the "=" sign.
#
TYPE=xDSL
# Device is fixed as ppp1 with "unit 1" pppd option.
DEVICE=ppp1
BOOTPROTO=dialup
# Will this be the default route?
DEFROUTE=yes
# PERSIST is ignored by pppoe-connect. Use the persist option in options.eth3
PERSIST=yes
USERCTL=yes
ONBOOT=no

# Ethernet card connected to DSL modem
ETH=eth3

# PPPoE user name.  You may have to supply "@provider.com"  Sympatico
# users in Canada do need to include "@sympatico.ca"
# Sympatico uses PAP authentication.  Make sure /etc/ppp/pap-secrets
# contains the right username/password combination.
# For Magma, use xxyyzz@magma.ca
# USER=bxxxnxnx@sympatico.ca
USER=hiaper

# Bring link up on demand?  Default is to leave link up all the time.
# If you want the link to come up on demand, set DEMAND to a number indicating
# the idle time after which the link is brought down.
DEMAND=no
#DEMAND=300

# DNS type: SERVER=obtain from server; SPECIFY=use DNS1 and DNS2;
# NOCHANGE=do not adjust.
DNSTYPE=NOCHANGE

# Obtain DNS server addresses from the peer (recent versions of pppd only)
# In old config files, this used to be called USEPEERDNS.  Changed to
# PEERDNS for better Red Hat compatibility
PEERDNS=no

### ONLY TOUCH THE FOLLOWING SETTINGS IF YOU'RE AN EXPERT

# How long pppoe-start waits for a new PPP interface to appear before
# concluding something went wrong.  If you use 0, then pppoe-start
# exits immediately with a successful status and does not wait for the
# link to come up.  Time is in seconds.
#
# WARNING WARNING WARNING:
#
# If you are using rp-pppoe on a physically-inaccessible host, set
# CONNECT_TIMEOUT to 0.  This makes SURE that the machine keeps trying
# to connect forever after pppoe-start is called.  Otherwise, it will
# give out after CONNECT_TIMEOUT seconds and will not attempt to
# connect again, making it impossible to reach.
# CONNECT_TIMEOUT=30
# The pppoe-connect script itself does an infinite loop, unless
# RETRY_ON_FAILURE=no. This parameter looks to be used only if DEMAND=yes.
CONNECT_TIMEOUT=0

# How often in seconds pppoe-start polls to check if link is up
# Not critical
CONNECT_POLL=2

# Specific desired AC (access concentrator) Name
# Not needed.
# ACNAME=

# Specific desired service name. Sent in a PADR packet to server.
# Arg to plugin: rp_pppoe_service $SERVICENAME
SERVICENAME=BGAN:BACKGROUND

# Character to echo at each poll.  Use PING="" if you don't want
# anything echoed
PING="."

# File where the pppoe-connect script writes its process-ID.
# Three files are actually used:
#   $PIDFILE       contains PID of pppoe-connect script
#   $PIDFILE.pppoe contains PID of pppoe process
#   $PIDFILE.pppd  contains PID of pppd process
CF_BASE=`basename $CONFIG`
PIDFILE="/var/run/$CF_BASE-pppoe.pid"

# Do you want to use synchronous PPP?  "yes" or "no".  "yes" is much
# easier on CPU usage, but may not work for you.  It is safer to use
# "no", but you may want to experiment with "yes".  "yes" is generally
# safe on Linux machines with the n_hdlc line discipline; unsafe on others.
SYNCHRONOUS=yes

# mru n  Set the MRU [Maximum Receive Unit] value to n. Pppd  will
# ask  the  peer  to  send packets of no more than n bytes.
# The value of n must be between 128 and 16384; the default
# is  1500.   A  value of 296 works well on very slow links
# (40 bytes for TCP/IP header + 256 bytes of  data).   Note
# that  for  the  IPv6  protocol,  the MRU must be at least
# 1280.
# PPPOE adds 8 bytes of overhead. Max MRU for ethernet is 1500
# so max MRU is 1500-8=1492
MRU=1492

# mtu n  Set the MTU [Maximum Transmit Unit] value to  n.   Unless
# the  peer  requests  a smaller value via MRU negotiation,
# pppd will request that the kernel  networking  code  send
# data packets of no more than n bytes through the PPP net-
# work interface.  Note that for the IPv6 protocol, the MTU
# must be at least 1280
# PPPOE adds 8 bytes of overhead. Max MRU for ethernet is 1500
# so max MTU is 1500-8=1492
MTU=1492

# Do you want to clamp the MSS?  Here's how to decide:
# - If you have only a SINGLE computer connected to the DSL modem, choose
#   "no".
# - If you have a computer acting as a gateway for a LAN, choose "1412".
#   The setting of 1412 is safe for either setup, but uses slightly more
#   CPU power.
#
# This option is not used with the pppd LINUX_PLUGIN, rp-pppoe.so.
# As a workaround, use this iptables rule (man iptables) to clamp
# the mss to MTU-40:
# iptables -t mangle -A FORWARD -p tcp --tcp-flags SYN,RST SYN \
#                         -j TCPMSS --clamp-mss-to-pmtu
# 
# CLAMPMSS=1452
#CLAMPMSS=no

#  lcp-echo-interval n: If this option is given, pppd will send
# an LCP echo-request frame to the peer every n seconds.  Normally
# the peer should respond to the echo-request by sending an
# echo-reply.   This  option   can   be   used   with   the
# lcp-echo-failure  option  to  detect  that the peer is no
# longer connected.
LCP_INTERVAL=20

# lcp-echo-failure n: If this option is given, pppd will presume
# the peer to be dead if n LCP echo-requests are sent without
# receiving  a valid  LCP echo-reply.  If this happens, pppd will
# terminate the connection.  Use of this option requires a  non-
# zero  value  for  the  lcp-echo-interval parameter.  This
# option can be used to enable pppd to terminate after  the
# physical  connection has been broken (e.g., the modem has
# hung up) in situations where no  hardware  modem  control
# lines are available.
LCP_FAILURE=3

# PPPOE_TIMEOUT should be about 4*LCP_INTERVAL
# This value is not used with the LINUX_PLUGIN, so don't worry about it
PPPOE_TIMEOUT=60

# Firewalling: One of NONE, STANDALONE or MASQUERADE
FIREWALL=NONE

# Linux kernel-mode plugin for pppd.  If you want to try the kernel-mode
# plugin, use LINUX_PLUGIN=/etc/ppp/plugins/rp-pppoe.so
LINUX_PLUGIN=/etc/ppp/plugins/rp-pppoe.so

# Any extra arguments to pass to pppoe.  Normally, use a blank string
# like this:
# PPPOE_EXTRA=""

# Rumour has it that "Citizen's Communications" with a 3Com
# HomeConnect DSL Modem DualLink requires these extra options:
# PPPOE_EXTRA="-f 3c12:3c13 -S ISP"

# Any extra arguments to pass to pppd.  Normally, use a blank string
# like this:
# PPPD_EXTRA=""


########## DON'T CHANGE BELOW UNLESS YOU KNOW WHAT YOU ARE DOING
# If you wish to COMPLETELY overrride the pppd invocation:
# Example:
# OVERRIDE_PPPD_COMMAND="pppd call dsl"

# If you want pppoe-connect to exit when connection drops:
# RETRY_ON_FAILURE=no
