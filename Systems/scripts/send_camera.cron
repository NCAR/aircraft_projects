#!/bin/sh
#
# Script to transmit latest camera image to the ground.
#
# This is set up to run out of a cron job every 2 minutes
# */2 * * * * /home/local/Systems/scripts/send_camera.cron
#
#set -x

debug=0
camera_images_dir="/mnt/r1/camera_images"
if [ $debug -ne 0 ]; then
    camera_images_dir="${RAW_DATA_DIR}/CONTRAST/camera_images"
fi

key=`echo $AIRCRAFT | cut -d _ -f 1`_camera_
#key=GV_camera_

# possible choices for the camera feed:
#  forward
#  down
#  left
#  right
#  montage  All four camera images in a quadrant.
#
camera=`psql -d real-time -U ads -t -c "SELECT value FROM mission_control WHERE key='camera';" | tr -d ' '`
feed="$camera"
feed=montage
case "$camera" in

    left|right|down|forward)
	;;
    *)
	camera="forward"
	;;
esac

# change into the current flight's folder
flightdir=`ls -td ${camera_images_dir}/flight_number_* | grep -v tar | head -n1`
flight=$flightdir/$camera
[[ -d $flight ]] || exit
cd $flight

# exit if folder is empty-ish
nfiles=`ls -l | wc -l`
[[ $nfiles -lt 3 ]] && exit

# create a folder to hold the sent files
[[ -d ../sent ]] || mkdir ../sent

# get the penultimate new file
file=`ls -t | head -n 2 | tail -n 1`

# exit if this file is older than 3 minutes
let dtime=`date +%s`-`stat -c %X $file`
#[ $dtime -gt 180 ] && echo "not sending out old file: "$PWD"/"$file
if [ $debug -eq 0 ]; then
    [ $dtime -gt 180 ] && exit
fi

# Now we have a single camera image.  In montage mode, look for the
# same image time in the other camera directories.
case "$feed" in

    montage)
	if [ -f ../montage/${file} ]; then
	    cd ../montage
	    break
	fi
	quads=""
	for q in forward down left right ; do
	    if [ -f $flightdir/$q/$file ]; then
		quads="$quads $flightdir/$q/$file"
	    else
		quads="$quads null:"
	    fi
	done
	mkdir -p ../montage
	# The forward camera is a little larger than the others, so we must
	# resize all of them to fit evenly into the quadrants.
	montage $quads -background black -tile 2x2 -geometry 1280x960+1+1 \
	    ../montage/${file}
	cd ../montage
	;;
esac	

# exit if this file was already sent
[[ -f ../sent/$key$file ]] && exit

# compress the file
title=`echo $file | sed 's/\.jpg//'`
convert $file -sharpen 0.0x1.0 -scale 33% \
        -gravity northwest -fill 'grey80' -undercolor 'grey20' \
        -font "Helvetica-Bold" -pointsize 18 -annotate 0 $title \
        ../sent/$key$file

# insert it into the LDM queue
/home/ldm/bin/pqinsert -v ../sent/$key$file
